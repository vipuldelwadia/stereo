package daap;

import java.util.HashMap;
import java.util.Map;

public class DAAPConstants {
    
	public static final int abal = 1633837420;
	public static final int abar = 1633837426;
	public static final int abcp = 1633837936;
	public static final int abgn = 1633838958;
	public static final int abpl = 1633841260;
	public static final int abro = 1633841775;
	public static final int adbs = 1633968755;
	public static final int aeAI = 1634025801;
	public static final int aeCI = 1634026313;
	public static final int aeCR = 1634026322;
	public static final int aeEN = 1634026830;
	public static final int aeES = 1634026835;
	public static final int aeGD = 1634027332;
	public static final int aeGE = 1634027333;
	public static final int aeGH = 1634027336;
	public static final int aeGI = 1634027337;
	public static final int aeGR = 1634027346;
	public static final int aeGU = 1634027349;
	public static final int aeHV = 1634027606;
	public static final int aeMK = 1634028875;
	public static final int aeNN = 1634029134;
	public static final int aeNV = 1634029142;
	public static final int aePC = 1634029635;
	public static final int aePI = 1634029641;
	public static final int aePP = 1634029648;
	public static final int aePS = 1634029651;
	public static final int aeSF = 1634030406;
	public static final int aeSI = 1634030409;
	public static final int aeSN = 1634030414;
	public static final int aeSP = 1634030416;
	public static final int aeSU = 1634030421;
	public static final int aeSV = 1634030422;
	public static final int agrp = 1634169456;
	public static final int aply = 1634757753;
	public static final int aprm = 1634759277;
	public static final int apro = 1634759279;
	public static final int apsm = 1634759533;
	public static final int apso = 1634759535;
	public static final int arif = 1634888038;
	public static final int arsv = 1634890614;
	public static final int asaa = 1634951521;
	public static final int asai = 1634951529;
	public static final int asal = 1634951532;
	public static final int asar = 1634951538;
	public static final int asbk = 1634951787;
	public static final int asbo = 1634951791;
	public static final int asbr = 1634951794;
	public static final int asbt = 1634951796;
	public static final int ascd = 1634952036;
	public static final int ascm = 1634952045;
	public static final int ascn = 1634952046;
	public static final int asco = 1634952047;
	public static final int ascp = 1634952048;
	public static final int ascr = 1634952050;
	public static final int ascs = 1634952051;
	public static final int asct = 1634952052;
	public static final int asda = 1634952289;
	public static final int asdb = 1634952290;
	public static final int asdc = 1634952291;
	public static final int asdk = 1634952299;
	public static final int asdm = 1634952301;
	public static final int asdn = 1634952302;
	public static final int asdp = 1634952304;
	public static final int asdr = 1634952306;
	public static final int asdt = 1634952308;
	public static final int ased = 1634952548;
	public static final int aseq = 1634952561;
	public static final int asfm = 1634952813;
	public static final int asgn = 1634953070;
	public static final int asgp = 1634953072;
	public static final int ashp = 1634953328;
	public static final int asky = 1634954105;
	public static final int aslc = 1634954339;
	public static final int aspu = 1634955381;
	public static final int asrv = 1634955894;
	public static final int assa = 1634956129;
	public static final int assc = 1634956131;
	public static final int assl = 1634956140;
	public static final int assn = 1634956142;
	public static final int assp = 1634956144;
	public static final int assr = 1634956146;
	public static final int asss = 1634956147;
	public static final int asst = 1634956148;
	public static final int assu = 1634956149;
	public static final int assz = 1634956154;
	public static final int astc = 1634956387;
	public static final int astm = 1634956397;
	public static final int astn = 1634956398;
	public static final int asul = 1634956652;
	public static final int asur = 1634956658;
	public static final int asyr = 1634957682;
	public static final int ated = 1635018084;
	public static final int avdb = 1635148898;
	public static final int mbcl = 1835164524;
	public static final int mccr = 1835230066;
	public static final int mcna = 1835232865;
	public static final int mcnm = 1835232877;
	public static final int mcon = 1835233134;
	public static final int mctc = 1835234403;
	public static final int mcti = 1835234409;
	public static final int mcty = 1835234425;
	public static final int mdcl = 1835295596;
	public static final int miid = 1835624804;
	public static final int mikd = 1835625316;
	public static final int mimc = 1835625827;
	public static final int minm = 1835626093;
	public static final int mlcl = 1835819884;
	public static final int mlid = 1835821412;
	public static final int mlit = 1835821428;
	public static final int mlog = 1835822951;
	public static final int mpco = 1836082031;
	public static final int mper = 1836082546;
	public static final int mpro = 1836085871;
	public static final int mrco = 1836213103;
	public static final int msal = 1836278124;
	public static final int msas = 1836278131;
	public static final int msau = 1836278133;
	public static final int msbr = 1836278386;
	public static final int msdc = 1836278883;
	public static final int msex = 1836279160;
	public static final int msix = 1836280184;
	public static final int mslr = 1836280946;
	public static final int mspi = 1836281961;
	public static final int msqy = 1836282233;
	public static final int msrs = 1836282483;
	public static final int msrv = 1836282486;
	public static final int mstc = 1836282979;
	public static final int mstm = 1836282989;
	public static final int msto = 1836282991;
	public static final int msts = 1836282995;
	public static final int mstt = 1836282996;
	public static final int msup = 1836283248;
	public static final int mtco = 1836344175;
	public static final int mudl = 1836409964;
	public static final int mupd = 1836413028;
	public static final int musr = 1836413810;
    
	public static final int ITEM_KIND = mikd;
	public static final int TRACK_ID = miid;
	public static final int NAME = minm;
	public static final int ARTIST = asar;
	public static final int PERSISTENT_ID = mper;
	public static final int ALBUM = asal;
    public static final int BITRATE = asbr;
    public static final int COMPOSER = ascp;
    public static final int GENRE = asgn;
    public static final int SONG_TIME = astm;
    public static final int START_TIME = asst;
    public static final int STOP_TIME = assp;
    
    public static final Map<Integer, String> longCodes
    		= new HashMap<Integer, String>();
    public static final Map<String, Integer> shortCodes
    		= new HashMap<String, Integer>();
    public static final Map<Integer, Integer> types
			= new HashMap<Integer, Integer>();
    
    protected static int parseInt(String code) {
        return readInteger(code.toCharArray());
    }
    
    private static int readInteger(char[] b) {
        int size = 0;
        for (int i = 0; i < 4; i++) {
            size <<= 8;
            size += b[i] & 255;
        }
        return size;
    }
    
    static {
    	longCodes.put(abal, "daap.browsealbumlisting");
    	longCodes.put(abar, "daap.browseartistlisting");
    	longCodes.put(abcp, "daap.browsecomposerlisting");
    	longCodes.put(abgn, "daap.browsegenrelisting");
    	longCodes.put(abpl, "daap.baseplaylist");
    	longCodes.put(abro, "daap.databasebrowse");
    	longCodes.put(adbs, "daap.databasesongs");
    	longCodes.put(aeAI, "com.apple.itunes.itms-artistid");
    	longCodes.put(aeCI, "com.apple.itunes.itms-composerid");
    	longCodes.put(aeCR, "com.apple.itunes.content-rating");
    	longCodes.put(aeEN, "com.apple.itunes.episode-num-str");
    	longCodes.put(aeES, "com.apple.itunes.episode-sort");
    	longCodes.put(aeGD, "com.apple.itunes.gapless-enc-dr");
    	longCodes.put(aeGE, "com.apple.itunes.gapless-enc-del");
    	longCodes.put(aeGH, "com.apple.itunes.gapless-heur");
    	longCodes.put(aeGI, "com.apple.itunes.itms-genreid");
    	longCodes.put(aeGR, "com.apple.itunes.gapless-resy");
    	longCodes.put(aeGU, "com.apple.itunes.gapless-dur");
    	longCodes.put(aeHV, "com.apple.itunes.has-video");
    	longCodes.put(aeMK, "com.apple.itunes.mediakind");
    	longCodes.put(aeNN, "com.apple.itunes.network-name");
    	longCodes.put(aeNV, "com.apple.itunes.norm-volume");
    	longCodes.put(aePC, "com.apple.itunes.is-podcast");
    	longCodes.put(aePI, "com.apple.itunes.itms-playlistid");
    	longCodes.put(aePP, "com.apple.itunes.is-podcast-playlist");
    	longCodes.put(aePS, "com.apple.itunes.special-playlist");
    	longCodes.put(aeSF, "com.apple.itunes.itms-storefrontid");
    	longCodes.put(aeSI, "com.apple.itunes.itms-songid");
    	longCodes.put(aeSN, "com.apple.itunes.series-name");
    	longCodes.put(aeSP, "com.apple.itunes.smart-playlist");
    	longCodes.put(aeSU, "com.apple.itunes.season-num");
    	longCodes.put(aeSV, "com.apple.itunes.music-sharing-version");
    	longCodes.put(agrp, "daap.songgrouping");
    	longCodes.put(aply, "daap.databaseplaylists");
    	longCodes.put(aprm, "daap.playlistrepeatmode");
    	longCodes.put(apro, "daap.protocolversion");
    	longCodes.put(apsm, "daap.playlistshufflemode");
    	longCodes.put(apso, "daap.playlistsongs");
    	longCodes.put(arif, "daap.resolveinfo");
    	longCodes.put(arsv, "daap.resolve");
    	longCodes.put(asaa, "daap.songalbumartist");
    	longCodes.put(asai, "daap.songalbumid");
    	longCodes.put(asal, "daap.songalbum");
    	longCodes.put(asar, "daap.songartist");
    	longCodes.put(asbk, "daap.bookmarkable");
    	longCodes.put(asbo, "daap.songbookmark");
    	longCodes.put(asbr, "daap.songbitrate");
    	longCodes.put(asbt, "daap.songbeatsperminute");
    	longCodes.put(ascd, "daap.songcodectype");
    	longCodes.put(ascm, "daap.songcomment");
    	longCodes.put(ascn, "daap.songcontentdescription");
    	longCodes.put(asco, "daap.songcompilation");
    	longCodes.put(ascp, "daap.songcomposer");
    	longCodes.put(ascr, "daap.songcontentrating");
    	longCodes.put(ascs, "daap.songcodecsubtype");
    	longCodes.put(asct, "daap.songcategory");
    	longCodes.put(asda, "daap.songdateadded");
    	longCodes.put(asdb, "daap.songdisabled");
    	longCodes.put(asdc, "daap.songdisccount");
    	longCodes.put(asdk, "daap.songdatakind");
    	longCodes.put(asdm, "daap.songdatemodified");
    	longCodes.put(asdn, "daap.songdiscnumber");
    	longCodes.put(asdp, "daap.songdatepurchased");
    	longCodes.put(asdr, "daap.songdatereleased");
    	longCodes.put(asdt, "daap.songdescription");
    	longCodes.put(ased, "daap.songextradata");
    	longCodes.put(aseq, "daap.songeqpreset");
    	longCodes.put(asfm, "daap.songformat");
    	longCodes.put(asgn, "daap.songgenre");
    	longCodes.put(asgp, "daap.songgapless");
    	longCodes.put(ashp, "daap.songhasbeenplayed");
    	longCodes.put(asky, "daap.songkeywords");
    	longCodes.put(aslc, "daap.songlongcontentdescription");
    	longCodes.put(aspu, "daap.songpodcasturl");
    	longCodes.put(asrv, "daap.songrelativevolume");
    	longCodes.put(assa, "daap.sortartist");
    	longCodes.put(assc, "daap.sortcomposer");
    	longCodes.put(assl, "daap.sortalbumartist");
    	longCodes.put(assn, "daap.sortname");
    	longCodes.put(assp, "daap.songstoptime");
    	longCodes.put(assr, "daap.songsamplerate");
    	longCodes.put(asss, "daap.sortseriesname");
    	longCodes.put(asst, "daap.songstarttime");
    	longCodes.put(assu, "daap.sortalbum");
    	longCodes.put(assz, "daap.songsize");
    	longCodes.put(astc, "daap.songtrackcount");
    	longCodes.put(astm, "daap.songtime");
    	longCodes.put(astn, "daap.songtracknumber");
    	longCodes.put(asul, "daap.songdataurl");
    	longCodes.put(asur, "daap.songuserrating");
    	longCodes.put(asyr, "daap.songyear");
    	longCodes.put(ated, "daap.supportsextradata");
    	longCodes.put(avdb, "daap.serverdatabases");
    	longCodes.put(mbcl, "dmap.bag");
    	longCodes.put(mccr, "dmap.contentcodesresponse");
    	longCodes.put(mcna, "dmap.contentcodesname");
    	longCodes.put(mcnm, "dmap.contentcodesnumber");
    	longCodes.put(mcon, "dmap.container");
    	longCodes.put(mctc, "dmap.containercount");
    	longCodes.put(mcti, "dmap.containeritemid");
    	longCodes.put(mcty, "dmap.contentcodestype");
    	longCodes.put(mdcl, "dmap.dictionary");
    	longCodes.put(miid, "dmap.itemid");
    	longCodes.put(mikd, "dmap.itemkind");
    	longCodes.put(mimc, "dmap.itemcount");
    	longCodes.put(minm, "dmap.itemname");
    	longCodes.put(mlcl, "dmap.listing");
    	longCodes.put(mlid, "dmap.sessionid");
    	longCodes.put(mlit, "dmap.listingitem");
    	longCodes.put(mlog, "dmap.loginresponse");
    	longCodes.put(mpco, "dmap.parentcontainerid");
    	longCodes.put(mper, "dmap.persistentid");
    	longCodes.put(mpro, "dmap.protocolversion");
    	longCodes.put(mrco, "dmap.returnedcount");
    	longCodes.put(msal, "dmap.supportsautologout");
    	longCodes.put(msas, "dmap.authenticationschemes");
    	longCodes.put(msau, "dmap.authenticationmethod");
    	longCodes.put(msbr, "dmap.supportsbrowse");
    	longCodes.put(msdc, "dmap.databasescount");
    	longCodes.put(msex, "dmap.supportsextensions");
    	longCodes.put(msix, "dmap.supportsindex");
    	longCodes.put(mslr, "dmap.loginrequired");
    	longCodes.put(mspi, "dmap.supportspersistentids");
    	longCodes.put(msqy, "dmap.supportsquery");
    	longCodes.put(msrs, "dmap.supportsresolve");
    	longCodes.put(msrv, "dmap.serverinforesponse");
    	longCodes.put(mstc, "dmap.utctime");
    	longCodes.put(mstm, "dmap.timeoutinterval");
    	longCodes.put(msto, "dmap.utcoffset");
    	longCodes.put(msts, "dmap.statusstring");
    	longCodes.put(mstt, "dmap.status");
    	longCodes.put(msup, "dmap.supportsupdate");
    	longCodes.put(mtco, "dmap.specifiedtotalcount");
    	longCodes.put(mudl, "dmap.deletedidlisting");
    	longCodes.put(mupd, "dmap.updateresponse");
    	longCodes.put(musr, "dmap.serverrevision");
    }
    
    static {
    	shortCodes.put("daap.browsealbumlisting", abal);
    	shortCodes.put("daap.browseartistlisting", abar);
    	shortCodes.put("daap.browsecomposerlisting", abcp);
    	shortCodes.put("daap.browsegenrelisting", abgn);
    	shortCodes.put("daap.baseplaylist", abpl);
    	shortCodes.put("daap.databasebrowse", abro);
    	shortCodes.put("daap.databasesongs", adbs);
    	shortCodes.put("com.apple.itunes.itms-artistid", aeAI);
    	shortCodes.put("com.apple.itunes.itms-composerid", aeCI);
    	shortCodes.put("com.apple.itunes.content-rating", aeCR);
    	shortCodes.put("com.apple.itunes.episode-num-str", aeEN);
    	shortCodes.put("com.apple.itunes.episode-sort", aeES);
    	shortCodes.put("com.apple.itunes.gapless-enc-dr", aeGD);
    	shortCodes.put("com.apple.itunes.gapless-enc-del", aeGE);
    	shortCodes.put("com.apple.itunes.gapless-heur", aeGH);
    	shortCodes.put("com.apple.itunes.itms-genreid", aeGI);
    	shortCodes.put("com.apple.itunes.gapless-resy", aeGR);
    	shortCodes.put("com.apple.itunes.gapless-dur", aeGU);
    	shortCodes.put("com.apple.itunes.has-video", aeHV);
    	shortCodes.put("com.apple.itunes.mediakind", aeMK);
    	shortCodes.put("com.apple.itunes.network-name", aeNN);
    	shortCodes.put("com.apple.itunes.norm-volume", aeNV);
    	shortCodes.put("com.apple.itunes.is-podcast", aePC);
    	shortCodes.put("com.apple.itunes.itms-playlistid", aePI);
    	shortCodes.put("com.apple.itunes.is-podcast-playlist", aePP);
    	shortCodes.put("com.apple.itunes.special-playlist", aePS);
    	shortCodes.put("com.apple.itunes.itms-storefrontid", aeSF);
    	shortCodes.put("com.apple.itunes.itms-songid", aeSI);
    	shortCodes.put("com.apple.itunes.series-name", aeSN);
    	shortCodes.put("com.apple.itunes.smart-playlist", aeSP);
    	shortCodes.put("com.apple.itunes.season-num", aeSU);
    	shortCodes.put("com.apple.itunes.music-sharing-version", aeSV);
    	shortCodes.put("daap.songgrouping", agrp);
    	shortCodes.put("daap.databaseplaylists", aply);
    	shortCodes.put("daap.playlistrepeatmode", aprm);
    	shortCodes.put("daap.protocolversion", apro);
    	shortCodes.put("daap.playlistshufflemode", apsm);
    	shortCodes.put("daap.playlistsongs", apso);
    	shortCodes.put("daap.resolveinfo", arif);
    	shortCodes.put("daap.resolve", arsv);
    	shortCodes.put("daap.songalbumartist", asaa);
    	shortCodes.put("daap.songalbumid", asai);
    	shortCodes.put("daap.songalbum", asal);
    	shortCodes.put("daap.songartist", asar);
    	shortCodes.put("daap.bookmarkable", asbk);
    	shortCodes.put("daap.songbookmark", asbo);
    	shortCodes.put("daap.songbitrate", asbr);
    	shortCodes.put("daap.songbeatsperminute", asbt);
    	shortCodes.put("daap.songcodectype", ascd);
    	shortCodes.put("daap.songcomment", ascm);
    	shortCodes.put("daap.songcontentdescription", ascn);
    	shortCodes.put("daap.songcompilation", asco);
    	shortCodes.put("daap.songcomposer", ascp);
    	shortCodes.put("daap.songcontentrating", ascr);
    	shortCodes.put("daap.songcodecsubtype", ascs);
    	shortCodes.put("daap.songcategory", asct);
    	shortCodes.put("daap.songdateadded", asda);
    	shortCodes.put("daap.songdisabled", asdb);
    	shortCodes.put("daap.songdisccount", asdc);
    	shortCodes.put("daap.songdatakind", asdk);
    	shortCodes.put("daap.songdatemodified", asdm);
    	shortCodes.put("daap.songdiscnumber", asdn);
    	shortCodes.put("daap.songdatepurchased", asdp);
    	shortCodes.put("daap.songdatereleased", asdr);
    	shortCodes.put("daap.songdescription", asdt);
    	shortCodes.put("daap.songextradata", ased);
    	shortCodes.put("daap.songeqpreset", aseq);
    	shortCodes.put("daap.songformat", asfm);
    	shortCodes.put("daap.songgenre", asgn);
    	shortCodes.put("daap.songgapless", asgp);
    	shortCodes.put("daap.songhasbeenplayed", ashp);
    	shortCodes.put("daap.songkeywords", asky);
    	shortCodes.put("daap.songlongcontentdescription", aslc);
    	shortCodes.put("daap.songpodcasturl", aspu);
    	shortCodes.put("daap.songrelativevolume", asrv);
    	shortCodes.put("daap.sortartist", assa);
    	shortCodes.put("daap.sortcomposer", assc);
    	shortCodes.put("daap.sortalbumartist", assl);
    	shortCodes.put("daap.sortname", assn);
    	shortCodes.put("daap.songstoptime", assp);
    	shortCodes.put("daap.songsamplerate", assr);
    	shortCodes.put("daap.sortseriesname", asss);
    	shortCodes.put("daap.songstarttime", asst);
    	shortCodes.put("daap.sortalbum", assu);
    	shortCodes.put("daap.songsize", assz);
    	shortCodes.put("daap.songtrackcount", astc);
    	shortCodes.put("daap.songtime", astm);
    	shortCodes.put("daap.songtracknumber", astn);
    	shortCodes.put("daap.songdataurl", asul);
    	shortCodes.put("daap.songuserrating", asur);
    	shortCodes.put("daap.songyear", asyr);
    	shortCodes.put("daap.supportsextradata", ated);
    	shortCodes.put("daap.serverdatabases", avdb);
    	shortCodes.put("dmap.bag", mbcl);
    	shortCodes.put("dmap.contentcodesresponse", mccr);
    	shortCodes.put("dmap.contentcodesname", mcna);
    	shortCodes.put("dmap.contentcodesnumber", mcnm);
    	shortCodes.put("dmap.container", mcon);
    	shortCodes.put("dmap.containercount", mctc);
    	shortCodes.put("dmap.containeritemid", mcti);
    	shortCodes.put("dmap.contentcodestype", mcty);
    	shortCodes.put("dmap.dictionary", mdcl);
    	shortCodes.put("dmap.itemid", miid);
    	shortCodes.put("dmap.itemkind", mikd);
    	shortCodes.put("dmap.itemcount", mimc);
    	shortCodes.put("dmap.itemname", minm);
    	shortCodes.put("dmap.listing", mlcl);
    	shortCodes.put("dmap.sessionid", mlid);
    	shortCodes.put("dmap.listingitem", mlit);
    	shortCodes.put("dmap.loginresponse", mlog);
    	shortCodes.put("dmap.parentcontainerid", mpco);
    	shortCodes.put("dmap.persistentid", mper);
    	shortCodes.put("dmap.protocolversion", mpro);
    	shortCodes.put("dmap.returnedcount", mrco);
    	shortCodes.put("dmap.supportsautologout", msal);
    	shortCodes.put("dmap.authenticationschemes", msas);
    	shortCodes.put("dmap.authenticationmethod", msau);
    	shortCodes.put("dmap.supportsbrowse", msbr);
    	shortCodes.put("dmap.databasescount", msdc);
    	shortCodes.put("dmap.supportsextensions", msex);
    	shortCodes.put("dmap.supportsindex", msix);
    	shortCodes.put("dmap.loginrequired", mslr);
    	shortCodes.put("dmap.supportspersistentids", mspi);
    	shortCodes.put("dmap.supportsquery", msqy);
    	shortCodes.put("dmap.supportsresolve", msrs);
    	shortCodes.put("dmap.serverinforesponse", msrv);
    	shortCodes.put("dmap.utctime", mstc);
    	shortCodes.put("dmap.timeoutinterval", mstm);
    	shortCodes.put("dmap.utcoffset", msto);
    	shortCodes.put("dmap.statusstring", msts);
    	shortCodes.put("dmap.status", mstt);
    	shortCodes.put("dmap.supportsupdate", msup);
    	shortCodes.put("dmap.specifiedtotalcount", mtco);
    	shortCodes.put("dmap.deletedidlisting", mudl);
    	shortCodes.put("dmap.updateresponse", mupd);
    	shortCodes.put("dmap.serverrevision", musr);
    }
    
    static {
    	types.put(abal, 12);
    	types.put(abar, 12);
    	types.put(abcp, 12);
    	types.put(abgn, 12);
    	types.put(abpl, 1);
    	types.put(abro, 12);
    	types.put(adbs, 12);
    	types.put(aeAI, 5);
    	types.put(aeCI, 5);
    	types.put(aeCR, 9);
    	types.put(aeEN, 9);
    	types.put(aeES, 5);
    	types.put(aeGD, 5);
    	types.put(aeGE, 5);
    	types.put(aeGH, 5);
    	types.put(aeGI, 5);
    	types.put(aeGR, 7);
    	types.put(aeGU, 7);
    	types.put(aeHV, 1);
    	types.put(aeMK, 1);
    	types.put(aeNN, 9);
    	types.put(aeNV, 5);
    	types.put(aePC, 1);
    	types.put(aePI, 5);
    	types.put(aePP, 1);
    	types.put(aePS, 1);
    	types.put(aeSF, 5);
    	types.put(aeSI, 5);
    	types.put(aeSN, 9);
    	types.put(aeSP, 1);
    	types.put(aeSU, 5);
    	types.put(aeSV, 5);
    	types.put(agrp, 9);
    	types.put(aply, 12);
    	types.put(aprm, 1);
    	types.put(apro, 11);
    	types.put(apsm, 1);
    	types.put(apso, 12);
    	types.put(arif, 12);
    	types.put(arsv, 12);
    	types.put(asaa, 9);
    	types.put(asai, 7);
    	types.put(asal, 9);
    	types.put(asar, 9);
    	types.put(asbk, 1);
    	types.put(asbo, 5);
    	types.put(asbr, 3);
    	types.put(asbt, 3);
    	types.put(ascd, 5);
    	types.put(ascm, 9);
    	types.put(ascn, 9);
    	types.put(asco, 1);
    	types.put(ascp, 9);
    	types.put(ascr, 1);
    	types.put(ascs, 5);
    	types.put(asct, 9);
    	types.put(asda, 10);
    	types.put(asdb, 1);
    	types.put(asdc, 3);
    	types.put(asdk, 1);
    	types.put(asdm, 10);
    	types.put(asdn, 3);
    	types.put(asdp, 10);
    	types.put(asdr, 10);
    	types.put(asdt, 9);
    	types.put(ased, 3);
    	types.put(aseq, 9);
    	types.put(asfm, 9);
    	types.put(asgn, 9);
    	types.put(asgp, 1);
    	types.put(ashp, 1);
    	types.put(asky, 9);
    	types.put(aslc, 9);
    	types.put(aspu, 9);
    	types.put(asrv, 2);
    	types.put(assa, 9);
    	types.put(assc, 9);
    	types.put(assl, 9);
    	types.put(assn, 9);
    	types.put(assp, 5);
    	types.put(assr, 5);
    	types.put(asss, 9);
    	types.put(asst, 5);
    	types.put(assu, 9);
    	types.put(assz, 5);
    	types.put(astc, 3);
    	types.put(astm, 5);
    	types.put(astn, 3);
    	types.put(asul, 9);
    	types.put(asur, 1);
    	types.put(asyr, 3);
    	types.put(ated, 3);
    	types.put(avdb, 12);
    	types.put(mbcl, 12);
    	types.put(mccr, 12);
    	types.put(mcna, 9);
    	types.put(mcnm, 5);
    	types.put(mcon, 12);
    	types.put(mctc, 5);
    	types.put(mcti, 5);
    	types.put(mcty, 3);
    	types.put(mdcl, 12);
    	types.put(miid, 5);
    	types.put(mikd, 1);
    	types.put(mimc, 5);
    	types.put(minm, 9);
    	types.put(mlcl, 12);
    	types.put(mlid, 5);
    	types.put(mlit, 12);
    	types.put(mlog, 12);
    	types.put(mpco, 5);
    	types.put(mper, 7);
    	types.put(mpro, 11);
    	types.put(mrco, 5);
    	types.put(msal, 1);
    	types.put(msas, 5);
    	types.put(msau, 1);
    	types.put(msbr, 1);
    	types.put(msdc, 5);
    	types.put(msex, 1);
    	types.put(msix, 1);
    	types.put(mslr, 1);
    	types.put(mspi, 1);
    	types.put(msqy, 1);
    	types.put(msrs, 1);
    	types.put(msrv, 12);
    	types.put(mstc, 10);
    	types.put(mstm, 5);
    	types.put(msto, 6);
    	types.put(msts, 9);
    	types.put(mstt, 5);
    	types.put(msup, 1);
    	types.put(mtco, 5);
    	types.put(mudl, 12);
    	types.put(mupd, 12);
    	types.put(musr, 5);
    }
}
